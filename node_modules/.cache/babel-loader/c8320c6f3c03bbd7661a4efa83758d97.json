{"remainingRequest":"/home/lucas/Dev/f1game/client/node_modules/babel-loader/lib/index.js!/home/lucas/Dev/f1game/client/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/lucas/Dev/f1game/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lucas/Dev/f1game/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/lucas/Dev/f1game/client/src/components/TempoProxCorrida.vue?vue&type=template&id=055ebda4","dependencies":[{"path":"/home/lucas/Dev/f1game/client/src/components/TempoProxCorrida.vue","mtime":1642715519006},{"path":"/home/lucas/Dev/f1game/client/babel.config.js","mtime":1642515319328},{"path":"/home/lucas/Dev/f1game/client/node_modules/cache-loader/dist/cjs.js","mtime":1642536827418},{"path":"/home/lucas/Dev/f1game/client/node_modules/babel-loader/lib/index.js","mtime":1642536827814},{"path":"/home/lucas/Dev/f1game/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1642536828078},{"path":"/home/lucas/Dev/f1game/client/node_modules/cache-loader/dist/cjs.js","mtime":1642536827418},{"path":"/home/lucas/Dev/f1game/client/node_modules/vue-loader-v16/dist/index.js","mtime":1642536827810}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnBhZC1zdGFydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHsgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZUVsZW1lbnRWTm9kZSBhcyBfY3JlYXRlRWxlbWVudFZOb2RlLCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jayB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiY29udGFkb3IiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAidGVtcG8tcmVzdGFudGUiCn07Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgY2xhc3M6ICJ0ZXh0by1jb250YWRvciIKfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgewogIGNsYXNzOiAidGV4dG8tdGVtcG8iCn0sICJwYXJhIHByw7N4aW1hIGNvcnJpZGEiKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDIiLCBfaG9pc3RlZF8yLCBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLmRhZG9zVGVtcG9Db3JyaWRhU2VndWludGUuZGlhcy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICIwIikpICsgImQgIiArIF90b0Rpc3BsYXlTdHJpbmcoJGRhdGEuZGFkb3NUZW1wb0NvcnJpZGFTZWd1aW50ZS5ob3Jhcy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICIwIikpICsgImggIiArIF90b0Rpc3BsYXlTdHJpbmcoJGRhdGEuZGFkb3NUZW1wb0NvcnJpZGFTZWd1aW50ZS5taW51dG9zLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgIjAiKSkgKyAibSAiICsgX3RvRGlzcGxheVN0cmluZygkZGF0YS5kYWRvc1RlbXBvQ29ycmlkYVNlZ3VpbnRlLnNlZ3VuZG9zLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgIjAiKSkgKyAicyAiLCAxCiAgLyogVEVYVCAqLwogICldKSwgX2hvaXN0ZWRfM10sIDY0CiAgLyogU1RBQkxFX0ZSQUdNRU5UICovCiAgKTsKfQ=="},{"version":3,"sources":["/home/lucas/Dev/f1game/client/src/components/TempoProxCorrida.vue"],"names":[],"mappings":";;;;;AACO,EAAA,KAAK,EAAC;;;AACL,EAAA,KAAK,EAAC;;;8BAOZ,mBAAA,CAEM,KAFN,EAEM;AAFD,EAAA,KAAK,EAAC;AAEL,CAFN,EAA2B,C,aACzB,mBAAA,CAA+C,GAA/C,EAA+C;AAA5C,EAAA,KAAK,EAAC;AAAsC,CAA/C,EAAuB,sBAAvB,CADyB,CAA3B,E;;AAAA,C;;;6DARA,mBAAA,CAOM,KAPN,EAAA,UAAA,EAOM,CANJ,mBAAA,CAKK,IALL,EAAA,UAAA,EAKK,gBAAA,CAJA,KAAA,CAAA,yBAAA,CAA0B,IAA1B,CAA+B,QAA/B,GAA0C,QAA1C,CAAkD,CAAlD,EAAkD,GAAlD,CAIA,CAAA,GAJ6D,IAI7D,GAHH,gBAAA,CAAG,KAAA,CAAA,yBAAA,CAA0B,KAA1B,CAAgC,QAAhC,GAA2C,QAA3C,CAAmD,CAAnD,EAAmD,GAAnD,CAAH,CAGG,GAH8D,IAG9D,GAFH,gBAAA,CAAG,KAAA,CAAA,yBAAA,CAA0B,OAA1B,CAAkC,QAAlC,GAA6C,QAA7C,CAAqD,CAArD,EAAqD,GAArD,CAAH,CAEG,GAFgE,IAEhE,GADH,gBAAA,CAAG,KAAA,CAAA,yBAAA,CAA0B,QAA1B,CAAmC,QAAnC,GAA8C,QAA9C,CAAsD,CAAtD,EAAsD,GAAtD,CAAH,CACG,GADiE,IAJtE,EAKA;AAAA;AALA,GAMI,CAPN,C,EAQA,U","sourcesContent":["<template>\n  <div class=\"contador\">\n    <h2 class=\"tempo-restante\">\n      {{ dadosTempoCorridaSeguinte.dias.toString().padStart(2, \"0\") }}d\n      {{ dadosTempoCorridaSeguinte.horas.toString().padStart(2, \"0\") }}h\n      {{ dadosTempoCorridaSeguinte.minutos.toString().padStart(2, \"0\") }}m\n      {{ dadosTempoCorridaSeguinte.segundos.toString().padStart(2, \"0\") }}s\n    </h2>\n  </div>\n  <div class=\"texto-contador\">\n    <p class=\"texto-tempo\">para pr√≥xima corrida</p>\n  </div>\n</template>\n\n<script>\nconst moment = require(\"moment\");\n\nexport default {\n  data() {\n    return {\n      anoAtual: new Date().getUTCFullYear(),\n      dataAtual: moment().format(\"YYYY-MM-DD\"),\n      dataAtualFormatada: moment().format(\"DD-MM-YYYY\"),\n      dadosTempoCorridaSeguinte: {\n        dias: \"00\",\n        horas: \"00\",\n        minutos: \"00\",\n        segundos: \"00\",\n      },\n    };\n  },\n  methods: {\n    async obterDataProxCorrida() {\n      const url = \"https://ergast.com/api/f1/current/next.json\";\n      const resposta = await fetch(url);\n      const dadosProxCorrida = await resposta.json();\n\n      const dataProxCorrida = dadosProxCorrida.MRData.RaceTable.Races[0].date;\n      const horario = dadosProxCorrida.MRData.RaceTable.Races[0].time.split(\"Z\")[0];\n      const arrDataCorrida = dataProxCorrida.split(\"-\");\n      let arrHorario = horario.split(\"Z\");\n      arrHorario = arrHorario.join(\"\").split(\":\");\n\n      return {\n        dia: arrDataCorrida[2],\n        mes: arrDataCorrida[1],\n        ano: arrDataCorrida[0],\n        hora: arrHorario[0],\n        minutos: arrHorario[1],\n        segundos: arrHorario[2],\n      };\n    },\n    formatarDadosDiaAtual(dadosHorario, dadosData) {\n      const horarioArr = dadosHorario.split(\":\");\n      const dataArr = dadosData.split(\"/\");\n      console.log(dadosData);\n\n      return {\n        dia: parseInt(dataArr[0]),\n        mes: parseInt(dataArr[1]),\n        ano: parseInt(dataArr[2]),\n        hora: parseInt(horarioArr[0]),\n        minutos: parseInt(horarioArr[1]),\n        segundos: parseInt(horarioArr[2]),\n      };\n    },\n    async calcularTempoProxCorrida() {\n      const dadosProxCorrida = await this.obterDataProxCorrida();\n      const horario = new Date().toLocaleTimeString(\"pt-BR\");\n      const dataAtual = new Date().toLocaleDateString(\"pt-BR\");\n      const dadosDataAtual = this.formatarDadosDiaAtual(horario, dataAtual);\n\n      const dataHoje = new Date(\n        dadosDataAtual.ano,\n        dadosDataAtual.mes,\n        dadosDataAtual.dia,\n        dadosDataAtual.hora,\n        dadosDataAtual.minutos,\n        dadosDataAtual.segundos\n      );\n\n      const dataCorrida = new Date(\n        dadosProxCorrida.ano,\n        dadosProxCorrida.mes,\n        dadosProxCorrida.dia,\n        dadosProxCorrida.hora,\n        dadosProxCorrida.minutos,\n        dadosProxCorrida.segundos\n      );\n\n      const milissegundosDataCorrida = dataCorrida.getTime();\n      const milissegundosDataHoje = dataHoje.getTime();\n\n      const diferencaDatas = this.calcularDiferencasDatas(milissegundosDataHoje, milissegundosDataCorrida);\n\n      if (diferencaDatas === 0) return;\n      this.atualizarTempoRestanteCorrida(diferencaDatas);\n    },\n    calcularDiferencasDatas(dataAtual, dataCorrida) {\n      let diferenca = (dataCorrida - dataAtual) / 1000;\n      const diferencaSegundos = Math.floor(diferenca % 60);\n      diferenca = Math.floor(diferenca / 60);\n      const diferencaMinutos = diferenca % 60;\n      diferenca = Math.floor(diferenca / 60);\n      const diferencaHoras = diferenca % 24;\n      diferenca = Math.floor(diferenca / 24);\n      const diferencaDias = diferenca;\n\n      return {\n        diferencaSegundos,\n        diferencaMinutos,\n        diferencaHoras,\n        diferencaDias,\n      };\n    },\n    atualizarTempoRestanteCorrida(tempoRestante) {\n      this.dadosTempoCorridaSeguinte.dias = tempoRestante.diferencaDias;\n      this.dadosTempoCorridaSeguinte.horas = tempoRestante.diferencaHoras;\n      this.dadosTempoCorridaSeguinte.minutos = tempoRestante.diferencaMinutos;\n      this.dadosTempoCorridaSeguinte.segundos = tempoRestante.diferencaSegundos;\n    },\n  },\n  created() {\n    this.calcularTempoProxCorrida();\n  },\n  mounted: function () {\n    window.setInterval(() => {\n      if (this.dadosTempoCorridaSeguinte.segundos === 0) {\n        this.dadosTempoCorridaSeguinte.segundos = 59;\n        this.dadosTempoCorridaSeguinte.minutos--;\n      } else {\n        this.dadosTempoCorridaSeguinte.segundos--;\n      }\n\n      if (this.dadosTempoCorridaSeguinte.minutos === 0 && this.dadosTempoCorridaSeguinte.segundos === 0) {\n        this.dadosTempoCorridaSeguinte.segundos = 59;\n        this.dadosTempoCorridaSeguinte.minutos = 59;\n        this.dadosTempoCorridaSeguinte.horas--;\n      }\n    }, 1000);\n  },\n};\n</script>\n"],"sourceRoot":""}]}