{"remainingRequest":"/home/lucas/Dev/f1game/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/lucas/Dev/f1game/client/src/components/TempoProxCorrida.vue?vue&type=template&id=055ebda4","dependencies":[{"path":"/home/lucas/Dev/f1game/client/src/components/TempoProxCorrida.vue","mtime":1642715519006},{"path":"/home/lucas/Dev/f1game/client/node_modules/cache-loader/dist/cjs.js","mtime":1642536827418},{"path":"/home/lucas/Dev/f1game/client/node_modules/babel-loader/lib/index.js","mtime":1642536827814},{"path":"/home/lucas/Dev/f1game/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1642536828078},{"path":"/home/lucas/Dev/f1game/client/node_modules/cache-loader/dist/cjs.js","mtime":1642536827418},{"path":"/home/lucas/Dev/f1game/client/node_modules/vue-loader-v16/dist/index.js","mtime":1642536827810}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iY29udGFkb3IiPgogICAgPGgyIGNsYXNzPSJ0ZW1wby1yZXN0YW50ZSI+CiAgICAgIHt7IGRhZG9zVGVtcG9Db3JyaWRhU2VndWludGUuZGlhcy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICIwIikgfX1kCiAgICAgIHt7IGRhZG9zVGVtcG9Db3JyaWRhU2VndWludGUuaG9yYXMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAiMCIpIH19aAogICAgICB7eyBkYWRvc1RlbXBvQ29ycmlkYVNlZ3VpbnRlLm1pbnV0b3MudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAiMCIpIH19bQogICAgICB7eyBkYWRvc1RlbXBvQ29ycmlkYVNlZ3VpbnRlLnNlZ3VuZG9zLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgIjAiKSB9fXMKICAgIDwvaDI+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0idGV4dG8tY29udGFkb3IiPgogICAgPHAgY2xhc3M9InRleHRvLXRlbXBvIj5wYXJhIHByw7N4aW1hIGNvcnJpZGE8L3A+CiAgPC9kaXY+Cg=="},{"version":3,"sources":["/home/lucas/Dev/f1game/client/src/components/TempoProxCorrida.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAChE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MACjE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MACnE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC,CAAC;EACN,CAAC,CAAC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/lucas/Dev/f1game/client/src/components/TempoProxCorrida.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"contador\">\n    <h2 class=\"tempo-restante\">\n      {{ dadosTempoCorridaSeguinte.dias.toString().padStart(2, \"0\") }}d\n      {{ dadosTempoCorridaSeguinte.horas.toString().padStart(2, \"0\") }}h\n      {{ dadosTempoCorridaSeguinte.minutos.toString().padStart(2, \"0\") }}m\n      {{ dadosTempoCorridaSeguinte.segundos.toString().padStart(2, \"0\") }}s\n    </h2>\n  </div>\n  <div class=\"texto-contador\">\n    <p class=\"texto-tempo\">para pr√≥xima corrida</p>\n  </div>\n</template>\n\n<script>\nconst moment = require(\"moment\");\n\nexport default {\n  data() {\n    return {\n      anoAtual: new Date().getUTCFullYear(),\n      dataAtual: moment().format(\"YYYY-MM-DD\"),\n      dataAtualFormatada: moment().format(\"DD-MM-YYYY\"),\n      dadosTempoCorridaSeguinte: {\n        dias: \"00\",\n        horas: \"00\",\n        minutos: \"00\",\n        segundos: \"00\",\n      },\n    };\n  },\n  methods: {\n    async obterDataProxCorrida() {\n      const url = \"https://ergast.com/api/f1/current/next.json\";\n      const resposta = await fetch(url);\n      const dadosProxCorrida = await resposta.json();\n\n      const dataProxCorrida = dadosProxCorrida.MRData.RaceTable.Races[0].date;\n      const horario = dadosProxCorrida.MRData.RaceTable.Races[0].time.split(\"Z\")[0];\n      const arrDataCorrida = dataProxCorrida.split(\"-\");\n      let arrHorario = horario.split(\"Z\");\n      arrHorario = arrHorario.join(\"\").split(\":\");\n\n      return {\n        dia: arrDataCorrida[2],\n        mes: arrDataCorrida[1],\n        ano: arrDataCorrida[0],\n        hora: arrHorario[0],\n        minutos: arrHorario[1],\n        segundos: arrHorario[2],\n      };\n    },\n    formatarDadosDiaAtual(dadosHorario, dadosData) {\n      const horarioArr = dadosHorario.split(\":\");\n      const dataArr = dadosData.split(\"/\");\n      console.log(dadosData);\n\n      return {\n        dia: parseInt(dataArr[0]),\n        mes: parseInt(dataArr[1]),\n        ano: parseInt(dataArr[2]),\n        hora: parseInt(horarioArr[0]),\n        minutos: parseInt(horarioArr[1]),\n        segundos: parseInt(horarioArr[2]),\n      };\n    },\n    async calcularTempoProxCorrida() {\n      const dadosProxCorrida = await this.obterDataProxCorrida();\n      const horario = new Date().toLocaleTimeString(\"pt-BR\");\n      const dataAtual = new Date().toLocaleDateString(\"pt-BR\");\n      const dadosDataAtual = this.formatarDadosDiaAtual(horario, dataAtual);\n\n      const dataHoje = new Date(\n        dadosDataAtual.ano,\n        dadosDataAtual.mes,\n        dadosDataAtual.dia,\n        dadosDataAtual.hora,\n        dadosDataAtual.minutos,\n        dadosDataAtual.segundos\n      );\n\n      const dataCorrida = new Date(\n        dadosProxCorrida.ano,\n        dadosProxCorrida.mes,\n        dadosProxCorrida.dia,\n        dadosProxCorrida.hora,\n        dadosProxCorrida.minutos,\n        dadosProxCorrida.segundos\n      );\n\n      const milissegundosDataCorrida = dataCorrida.getTime();\n      const milissegundosDataHoje = dataHoje.getTime();\n\n      const diferencaDatas = this.calcularDiferencasDatas(milissegundosDataHoje, milissegundosDataCorrida);\n\n      if (diferencaDatas === 0) return;\n      this.atualizarTempoRestanteCorrida(diferencaDatas);\n    },\n    calcularDiferencasDatas(dataAtual, dataCorrida) {\n      let diferenca = (dataCorrida - dataAtual) / 1000;\n      const diferencaSegundos = Math.floor(diferenca % 60);\n      diferenca = Math.floor(diferenca / 60);\n      const diferencaMinutos = diferenca % 60;\n      diferenca = Math.floor(diferenca / 60);\n      const diferencaHoras = diferenca % 24;\n      diferenca = Math.floor(diferenca / 24);\n      const diferencaDias = diferenca;\n\n      return {\n        diferencaSegundos,\n        diferencaMinutos,\n        diferencaHoras,\n        diferencaDias,\n      };\n    },\n    atualizarTempoRestanteCorrida(tempoRestante) {\n      this.dadosTempoCorridaSeguinte.dias = tempoRestante.diferencaDias;\n      this.dadosTempoCorridaSeguinte.horas = tempoRestante.diferencaHoras;\n      this.dadosTempoCorridaSeguinte.minutos = tempoRestante.diferencaMinutos;\n      this.dadosTempoCorridaSeguinte.segundos = tempoRestante.diferencaSegundos;\n    },\n  },\n  created() {\n    this.calcularTempoProxCorrida();\n  },\n  mounted: function () {\n    window.setInterval(() => {\n      if (this.dadosTempoCorridaSeguinte.segundos === 0) {\n        this.dadosTempoCorridaSeguinte.segundos = 59;\n        this.dadosTempoCorridaSeguinte.minutos--;\n      } else {\n        this.dadosTempoCorridaSeguinte.segundos--;\n      }\n\n      if (this.dadosTempoCorridaSeguinte.minutos === 0 && this.dadosTempoCorridaSeguinte.segundos === 0) {\n        this.dadosTempoCorridaSeguinte.segundos = 59;\n        this.dadosTempoCorridaSeguinte.minutos = 59;\n        this.dadosTempoCorridaSeguinte.horas--;\n      }\n    }, 1000);\n  },\n};\n</script>\n"]}]}