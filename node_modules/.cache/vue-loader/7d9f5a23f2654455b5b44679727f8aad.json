{"remainingRequest":"/home/lucas/Dev/f1game/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/lucas/Dev/f1game/client/src/components/TempoProxCorrida.vue?vue&type=template&id=055ebda4","dependencies":[{"path":"/home/lucas/Dev/f1game/client/src/components/TempoProxCorrida.vue","mtime":1642690802941},{"path":"/home/lucas/Dev/f1game/client/node_modules/cache-loader/dist/cjs.js","mtime":1642536827418},{"path":"/home/lucas/Dev/f1game/client/node_modules/babel-loader/lib/index.js","mtime":1642536827814},{"path":"/home/lucas/Dev/f1game/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1642536828078},{"path":"/home/lucas/Dev/f1game/client/node_modules/cache-loader/dist/cjs.js","mtime":1642536827418},{"path":"/home/lucas/Dev/f1game/client/node_modules/vue-loader-v16/dist/index.js","mtime":1642536827810}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iY29udGFkb3IiPgogICAgPGgyIGNsYXNzPSJ0ZW1wby1yZXN0YW50ZSI+NjBkIDA3aCAyOW0gNDNzPC9oMj4KICAgIDxwPnt7IGNhbGN1bGFyVGVtcG9Qcm94Q29ycmlkYSgpIH19PC9wPgogIDwvZGl2PgogIDxkaXYgY2xhc3M9InRleHRvLWNvbnRhZG9yIj4KICAgIDxwIGNsYXNzPSJ0ZXh0by10ZW1wbyI+cGFyYSBwcsOzeGltYSBjb3JyaWRhPC9wPgogIDwvZGl2Pgo="},{"version":3,"sources":["/home/lucas/Dev/f1game/client/src/components/TempoProxCorrida.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC,CAAC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/lucas/Dev/f1game/client/src/components/TempoProxCorrida.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"contador\">\n    <h2 class=\"tempo-restante\">60d 07h 29m 43s</h2>\n    <p>{{ calcularTempoProxCorrida() }}</p>\n  </div>\n  <div class=\"texto-contador\">\n    <p class=\"texto-tempo\">para pr√≥xima corrida</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      anoAtual: new Date().getUTCFullYear(),\n      dataAtual: this.obterDataAtual(),\n      dataProxCorrida: \"00/00/0000\",\n    };\n  },\n  methods: {\n    formatarDataFormatoBR(data) {\n      return data.split(\"-\").reverse().join(\"/\");\n    },\n    obterDataAtual() {\n      const hoje = new Date();\n      const dia = String(hoje.getDate()).padStart(2, \"0\");\n      const mes = String(hoje.getMonth() + 1).padStart(2, \"0\");\n      const ano = hoje.getFullYear();\n\n      const dataAtual = `${dia}/${mes}/${ano}`;\n      return dataAtual;\n    },\n    async obterDataProxCorrida() {\n      const url = \"https://ergast.com/api/f1/current/next.json\";\n      const resposta = await fetch(url);\n      const dadosProxCorrida = await resposta.json();\n      const dataProxCorrida = dadosProxCorrida.MRData.RaceTable.Races[0].date;\n\n      this.dataProxCorrida = dataProxCorrida;\n      return dataProxCorrida;\n    },\n    obterDadosDataCorrida(data) {\n      // Para obter array dos dados de ano, mes e dia\n      return data.split(\"-\");\n    },\n    formatarHorario(horario) {\n      console.log(horario);\n      const horarioArr = horario.split(\":\");\n\n      return {\n        horas: horarioArr[0],\n        minutos: horarioArr[1],\n        segundos: horarioArr[2],\n      };\n    },\n    async calcularTempoProxCorrida() {\n      let dataAtual = Date.now();\n\n      const horarioAtual = new Date().toLocaleTimeString();\n      const horarioFormatado = this.formatarHorario(horarioAtual);\n      dataAtual = Date.now().setHours(\n        horarioFormatado.horas,\n        horarioFormatado.minutos,\n        horarioFormatado.segundos\n      );\n      console.log(dataAtual);\n      const dataCorrida = await this.obterDataProxCorrida();\n      const dadosProxCorridaArr = this.obterDadosDataCorrida(dataCorrida);\n\n      const dataProxCorrida = new Date(\n        dadosProxCorridaArr[0],\n        dadosProxCorridaArr[1] - 1,\n        dadosProxCorridaArr[2]\n      ).setHours(12, 0, 0);\n\n      const diferencaDatas = this.calcularDiferencasDatas(\n        dataAtual,\n        dataProxCorrida\n      );\n\n      console.log(dataProxCorrida);\n      console.log(diferencaDatas);\n      console.log(`Segundos: ${diferencaDatas.segundos % 60}`);\n      console.log(`Minutos: ${diferencaDatas.minutos % 60}`);\n      console.log(`Horas: ${diferencaDatas.horas % 24}`);\n      console.log(`Dias: ${diferencaDatas.dias}`);\n    },\n    calcularDiferencasDatas(dataAtual, dataCorrida) {\n      const diferencasTempo = {};\n      function calcularDiferencaEmSegundos() {\n        const diferencaSegundos = Math.floor((dataCorrida - dataAtual) / 1000);\n\n        diferencasTempo.segundos = diferencaSegundos;\n        return diferencaSegundos;\n      }\n\n      function calcularDiferencaMinutos() {\n        const segundos = calcularDiferencaEmSegundos();\n        const diferencaMinutos = Math.floor(segundos / 60);\n        diferencasTempo.minutos = diferencaMinutos;\n\n        return diferencaMinutos;\n      }\n\n      function calcularDiferencaHoras() {\n        const minutos = calcularDiferencaMinutos();\n        const diferencaHoras = Math.floor(minutos / 60);\n        diferencasTempo.horas = diferencaHoras;\n\n        return diferencaHoras;\n      }\n\n      function calcularDiferencaDias() {\n        const horas = calcularDiferencaHoras();\n        const diferencaDias = Math.floor(horas / 24);\n        diferencasTempo.dias = diferencaDias;\n\n        return diferencaDias;\n      }\n\n      calcularDiferencaDias();\n\n      return diferencasTempo;\n    },\n  },\n  async created() {\n    this.calcularTempoProxCorrida();\n  },\n};\n</script>\n\n<style scoped></style>\n"]}]}